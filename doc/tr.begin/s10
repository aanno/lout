@Section
   @Tag { refs }
   @Title { References }
@Begin
@PP
The method of handling references described in this section is rather
elaborate, but it has many advantages.  The first step is to create a
separate @I {database file} containing @Code "@Reference" symbols.  Each
is enclosed in braces, and has options chosen from
{@Code "@Tag"}, {@Code "@Type"}, {@Code "@Author"}, {@Code "@Title"},
{@Code "@Institution"}, {@Code "@Number"}, {@Code "@Publisher"},
{@Code "@Year"}, {@Code "@Proceedings"}, {@Code "@Journal"},
{@Code "@Volume"}, {@Code "@Pages"}, and {@Code "@Comment"}:
@IndentedList
@ListItem @Code {
"{ @Reference"
"     @Tag { strunk79 }"
"     @Type { Book }"
"     @Author { Strunk and White }"
"     @Title { The Elements of Style }"
"     @Publisher { MacMillan }"
"     @Year { 1979 }"
"}"
}
@ListItem @Code {
"{ @Reference"
"     @Tag { kingston92 }"
"     @Type { TechReport }"
"     @Author { Kingston, Jeffrey H. }"
"     @Title { Document Formatting"
"with Lout }"
"     @Number { 449 }"
"     @Institution { Basser Department"
"of Computer Science F09, University"
"of Sydney 2006, Australia }"
"     @Year { 1992 }"
"}"
}
@EndList
The {@Code "@Tag"} and {@Code "@Type"} options are in fact compulsory; the
first serves to name the reference, the second gives its type, which may
be {@Code "TechReport"}, {@Code "ConferencePaper"}, {@Code "JournalArticle"},
{@Code "PhD"}, or {@Code "Book"}, although a Lout expert will be able to add
other types.  The type determines which other options must be present, as
shown above, and how they will be printed.
@PP
Suppose this file is given the name @Code "myrefs.ld" (Basser Lout
database file names must end in {@Code ".ld"}).  To tell Lout to refer
to this file as needed,
@ID @Code {
"@Database @Reference { myrefs }"
}
is placed at the beginning of the document, before {@Code "@Doc"},
{@Code "@Report"}, or {@Code "@Book"}.
@PP
Now, with everything prepared,
@ID @Code {
"{@Ref kingston92}"
}
for example at any point in the document will cause the reference whose
tag is @Code "kingston92" to be added to the nearest following
reference list, indicated by the symbol {@Code "@ReferenceSection"}, unless
it is already there.  Typically one would write
@ID @Code {
"... which ends our study."
"@DP"
"@ReferenceSection"
}
at the very end of the document (although one could equally well have several
@Code "@ReferenceSection" symbols scattered through the document if desired);
technical reports and books add @Code "@ReferenceSection" automatically
when needed.  The references will appear in alphabetical order by tag, and
the @Code "@Ref" symbol will be replaced by the number of the reference,
in this case {@Ref "kingston92"}.  @Code "@ReferenceSection" has a
@Code "@Title" option like {@Code "@Section"}, and it also has {@Code style},
{@Code indent}, {@Code gap} and {@Code start} options for contolling the
appearance of the reference list, like {@Code "@RawIndentList"}.
@PP
If a separate database file is not convenient for some reason, perhaps
because it is desirable for the entire document to reside in one file,
the @Code "@Reference" symbols may be incorporated into the document
itself, anywhere after {@Code "@Text @Begin"}.  Nothing will appear
where they are typed in, but Lout will
notice them and treat them exactly as if they had come from a database
file.  In this case no @Code "@Database" symbol is needed.
@PP
A way to print references at any point in the document is provided by
{@Code "@RefPrint"}:
@ID @Code "{@RefPrint kingston92}"
might have result
@ID {@RefPrint kingston92}
depending on what references exist.
@PP
To get section numbers, footnote numbers, cross references, and references
right, Basser Lout has to process the document more than once (three times
for numbered references), and create special files whose names end
in `.li' and `.ld'.  It will print warning messages on runs when this
process is incomplete, and substitute question marks for the unknown
values.  There should be only one document containing these features per
Unix directory, otherwise Basser Lout will confuse their special files.
@End @Section
