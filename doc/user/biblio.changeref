@Section
    @Title { Changing the overall appearance }
    @Tag { changeref }
@Begin
@PP
The appearance of reference lists and citations can be changed by
changing options in the setup file (see Section @NumberOf setup for a
general description of setup files).  The most important of these
options is {@Code "@RefLabels"}, which determines the kind of labels
ref.labels @Index @Code "@RefLabels"
given to the references, both in the reference list and at the point
of citation:
@ID @Code "@RefLabels { Arabic }"
Its value may be {@Code Arabic}, {@Code Roman}, {@Code UCRoman},
{@Code Alpha}, or {@Code UCAlpha}, as is usual for numbered things in
Lout, but there are also two special values, {@Code "Labelled"} and
{@Code "DropLabelled"}, which produce labels supplied by the user as
described in Section {@NumberOf labelled}.
@PP
@Code "@RefCiteStyle" determines the appearance of the result of the
ref.cite.style @Index @Code "@RefCiteStyle"
@Code "@Cite" symbol:
@ID @Code "@RefCiteStyle { [cite] }"
The result of @Code "@Cite" is the value of @Code "@RefCiteStyle" with
the @Code "cite" symbol replaced by the object following the @Code "@Cite"
symbol.  For example, the default value shown above encloses the citation
in brackets.  The @Code "cite" symbol must occur exactly once within
{@Code "@RefCiteStyle"}.
@PP
@Code "@RefListTitle" and @Code "@ChapRefListTitle" determine the heading
ref.list.title @Index @Code "@RefListTitle"
chap.ref.list.title @Index @Code "@ChapRefListTitle"
placed just before the reference list at the end of the document or
chapter (if @Code "@ChapRef" is used) respectively:
@ID @Code {
"@RefListTitle { references }"
"@ChapRefListTitle { references }"
}
Two special values, @Code references and {@Code bibliography}, produce
References and Bibliography in English and their equivalents in other
references.a @Index { `References' heading}
bibliography.a @Index { `Bibliography' heading }
languages.  Any other value is printed as given.
@PP
The appearance of the reference list is determined by the following
options:
@ID @Code {
"@RefListStyle { label. }"
"@RefListGap { 1.00v }"
"@RefListIndent { 0c }"
"@RefListRightIndent { 0c }"
}
These are analogous to the {@Code style}, {@Code gap}, {@Code indent},
and {@Code rightindent} options of the @Code "@List" symbol (Section
{@NumberOf lists}); that is, they determine the formatting of the
labels, the gap between items, and the indent at the extreme left
and right of the list.
@PP
The default value of @Code "@RefListStyle" shown above prints each
label followed by a period; to place brackets around each label,
change it to {@Code "@RefListStyle { [label] }"}, and so on.  You can
also make @Code "@RefListStyle" empty, producing an unlabelled list;
but owing to problems behind the scenes there is a peculiar rule:  if
@Code "@RefLabels" is @Code "Labelled" or {@Code "DropLabelled"},
then @Code "@RefListStyle" must either contain @Code "label" exactly
once or else it must be empty.  People with devious minds who need
(say) bulleted reference lists cited by label can work around this
restriction like this:
@ID @Code "@RefListStyle { @Bullet{white @Colour label} }"
This works because @Code "label" is there but invisible.
@PP
The other list option that needs to be specified is {@Code labelwidth},
the amount of horizontal space to leave for the labels.  There are
two options for this:
ref.list.label.width.a @Index @Code "@RefListLabelWidthA"
ref.list.label.width.b @Index @Code "@RefListLabelWidthB"
@ID @Code {
"@RefListLabelWidthA { 2.00f }"
"@RefListLabelWidthB { 4.00f }"
}
@Code "@RefListLabelWidthA" is used except when @Code "@RefLabels" is
{@Code Labelled}, when it is liable to be too small so Lout switches
to {@Code "@RefListLabelWidthB"}.  Unfortunately Lout is not clever
enough to choose the best width automatically.
@End @Section
